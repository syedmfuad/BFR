library(shiny) 
library(dplyr)
library(stringr)
library(tidyr)
library(haven)
library(tidyUSDA)
library(sf)
library(units)
library(ggrepel)
library(ggplot2)
library(RColorBrewer)
library(ggspatial)
library(DT)

# Define UI
ui <- fluidPage(
  tags$head(
    tags$style(HTML("
      .small-table-container {
        width: 80%; /* Adjust width as needed */
        margin: 0 auto; /* Center the table */
      }
      table.dataTable {
        font-size: 12px; /* Adjust font size as needed */
      }
    "))
  ), 
  titlePanel("Percentage of Specific Types of Producers"),
  sidebarLayout(
    sidebarPanel(
      #textInput("api_key", "Enter your USDA API key:", value = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"),
      selectInput("data_item", "Select Data Item:", 
                  choices = list("Beginning Producers" = "PRODUCERS, YEARS ON ANY OPERATION, LT 11 YEARS - NUMBER OF PRODUCERS",
                                 "Female Producers (Day to Day Decisionmaking)" = "PRODUCERS, FEMALE, DAY TO DAY DECISIONMAKING - NUMBER OF PRODUCERS",
                                 "Young Producers" = "PRODUCERS, AGE LT 35 - NUMBER OF PRODUCERS",
                                 "Producers with <3 YoE" = "PRODUCERS, YEARS ON PRESENT OPERATION, LT 3 YEARS - NUMBER OF PRODUCERS")),
      selectInput("year", "Select Year:", 
                  choices = list("2022" = "2022", "2017" = "2017", "% Change" = "% Change")),
      selectInput("view_type", "Select View Type:", 
                  choices = list("Map (Continuous Scale)" = "map", "Map (Discrete Scale)" = "map2", "Table" = "table", "Bar Chart" = "bar_chart")), 
      downloadButton("download_current", "Download Current View") 
    ),
    mainPanel(
      conditionalPanel(
        condition = "input.view_type == 'map'",
        plotOutput("map")
      ), 
      conditionalPanel(
        condition = "input.view_type == 'map2'",
        plotOutput("map2")
      ), 
      conditionalPanel(
        condition = "input.view_type == 'table'", 
        div(class = "small-table-container", dataTableOutput("table")) 
      ), 
      conditionalPanel(
        condition = "input.view_type == 'bar_chart'", 
        plotOutput("bar_chart") 
      )
    )
  )
)

# Define server logic
server <- function(input, output) {
  # Define the QS_BFR_name lookup table
  QS_BFR_name <- data.frame(
    state = c("01", "02", "04", "05", "06", "08", "09", "10", "11", "12", "13", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "44", "45", "46", "47", "48", "49", "50", "51", "53", "54", "55", "56"),
    state_name = c("ALABAMA", "ALASKA", "ARIZONA", "ARKANSAS", "CALIFORNIA", "COLORADO", "CONNECTICUT", "DELAWARE", "DISTRICT OF COLUMBIA", "FLORIDA", "GEORGIA", "HAWAII", "IDAHO", "ILLINOIS", "INDIANA", "IOWA", "KANSAS", "KENTUCKY", "LOUISIANA", "MAINE", "MARYLAND", "MASSACHUSETTS", "MICHIGAN", "MINNESOTA", "MISSISSIPPI", "MISSOURI", "MONTANA", "NEBRASKA", "NEVADA", "NEW HAMPSHIRE", "NEW JERSEY", "NEW MEXICO", "NEW YORK", "NORTH CAROLINA", "NORTH DAKOTA", "OHIO", "OKLAHOMA", "OREGON", "PENNSYLVANIA", "RHODE ISLAND", "SOUTH CAROLINA", "SOUTH DAKOTA", "TENNESSEE", "TEXAS", "UTAH", "VERMONT", "VIRGINIA", "WASHINGTON", "WEST VIRGINIA", "WISCONSIN", "WYOMING")
  )
  
  fetch_data <- function(year, data_item, api_key) {
    
    data_item <- ifelse(year == "2017" && data_item == "PRODUCERS, AGE LT 35 - NUMBER OF PRODUCERS", 
                        "PRODUCERS, AGE LE 35 - NUMBER OF PRODUCERS", 
                        data_item) 
    
    geographic_level <- ifelse(data_item == "PRODUCERS, FEMALE, DAY TO DAY DECISIONMAKING - NUMBER OF PRODUCERS", "STATE", "COUNTY")
    
    getQuickstat(
      key = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
      program = "CENSUS",
      sector = "DEMOGRAPHICS",
      group = "PRODUCERS",
      commodity = "PRODUCERS",
      category = "PRODUCERS",
      data_item = data_item,
      geographic_level = geographic_level,
      year = year
    ) %>%
      mutate(fips = paste0(state_fips_code, county_code)) %>%
      rename(Value = Value, state = state_fips_code) %>%
      group_by(state) %>%
      summarise(Value = sum(Value, na.rm = TRUE))
  }
  
  data <- reactive({
    api_key <- "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
    
    if (input$year == "% Change") {
      QS_BFR_2022 <- fetch_data("2022", input$data_item, api_key) %>%
        rename(bfr_2022 = Value)
      QS_BFR_2017 <- fetch_data("2017", input$data_item, api_key) %>%
        rename(bfr_2017 = Value)
      
      QS_TOTAL <- left_join(QS_BFR_2022, QS_BFR_2017, by = "state") %>%
        mutate(bfr_perc = ((bfr_2022 - bfr_2017) / bfr_2017) * 100)
      
    } else {
      QS_BFR <- fetch_data(input$year, input$data_item, api_key) %>%
        rename(bfr = Value)
      
      QS_TOTAL <- getQuickstat(
        key = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
        program = "CENSUS",
        sector = "DEMOGRAPHICS",
        group = "PRODUCERS",
        commodity = "PRODUCERS",
        category = "PRODUCERS",
        data_item = "PRODUCERS, (ALL) - NUMBER OF PRODUCERS",
        geographic_level = "COUNTY",
        year = input$year
      ) %>%
        mutate(fips = paste0(state_fips_code, county_code)) %>%
        rename(total = Value, state = state_fips_code) %>%
        group_by(state) %>%
        summarise(total = sum(total, na.rm = TRUE))
      
      QS_TOTAL <- left_join(QS_TOTAL, QS_BFR, by = "state") %>%
        mutate(bfr_perc = (bfr / total) * 100)
    }
    
    QS_TOTAL <- QS_TOTAL %>%
      left_join(QS_BFR_name, by = "state") 
    
    us_counties <- st_read("C:/Users/syedm/Desktop/BFR Spatial/Prelim/us_state.tar/us_state.shp") %>%
      rename(state = GEOID) %>%
      filter(!(STATEFP %in% c("78", "66", "72", "60", "69")))
    
    us_counties_df <- st_drop_geometry(us_counties)
    merged_df <- left_join(us_counties_df, QS_TOTAL, by = "state")
    us_counties <- st_sf(merged_df, geometry = us_counties$geometry)
    
    list(us_counties = us_counties, QS_TOTAL = QS_TOTAL)
  })
  
  output$map <- renderPlot({
    us_counties <- data()$us_counties 
    
    map_bfr_header <- function(data_item) {
      if (data_item == "PRODUCERS, YEARS ON ANY OPERATION, LT 11 YEARS - NUMBER OF PRODUCERS") {
        return("Beginning Producers")
      } else if (data_item == "PRODUCERS, FEMALE, DAY TO DAY DECISIONMAKING - NUMBER OF PRODUCERS") {
        return("Female Producers (Day to Day Decisionmaking)")
      } else if (data_item == "PRODUCERS, AGE LT 35 - NUMBER OF PRODUCERS") {
        return("Young Producers")
      } else if (data_item == "PRODUCERS, YEARS ON PRESENT OPERATION, LT 3 YEARS - NUMBER OF PRODUCERS") {
        return("Producers with <3 YoE") 
      } 
    } 
    
    bfr <- map_bfr_header(input$data_item) 
    bfr_change <- paste("Percentage change in", bfr) 
    bfr_share <- paste("Share of", bfr) 
    
    # Adjust plot size and other aesthetics 
    ggplot() +
      geom_sf(data = us_counties, aes(fill = bfr_perc), color = "gray90", size = 0.05) +
      scale_fill_gradient(low = "white", high = "blue", na.value = "grey50", name = "Percentage of Producers (%)") +
      theme_minimal() +
      
      labs(title = ifelse(input$year == "% Change", bfr_change, bfr_share)) + 
      
      #labs(title = ifelse(input$year == "% Change", "Percentage Change of Producers", 
      #paste("Percentage of", gsub("PRODUCERS, ", "", gsub(" - NUMBER OF PRODUCERS", "", input$data_item))))) +
      geom_sf_text(data = us_counties, aes(label = STUSPS), size = 3) +
      coord_sf(crs = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96") +
      theme(
        axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank()
      ) +
      theme(legend.position = "bottom") +
      guides(fill = guide_colorbar(barwidth = 20, barheight = 1))}, width = 800, height = 600)  # Adjust width and height as needed 
  
  
  
  output$map2 <- renderPlot({
    us_counties <- data()$us_counties 
    
    map_bfr_header <- function(data_item) {
      if (data_item == "PRODUCERS, YEARS ON ANY OPERATION, LT 11 YEARS - NUMBER OF PRODUCERS") {
        return("Beginning Producers")
      } else if (data_item == "PRODUCERS, FEMALE, DAY TO DAY DECISIONMAKING - NUMBER OF PRODUCERS") {
        return("Female Producers (Day to Day Decisionmaking)")
      } else if (data_item == "PRODUCERS, AGE LT 35 - NUMBER OF PRODUCERS") {
        return("Young Producers")
      } else if (data_item == "PRODUCERS, YEARS ON PRESENT OPERATION, LT 3 YEARS - NUMBER OF PRODUCERS") {
        return("Producers with <3 YoE") 
      } 
    } 
    
    bfr <- map_bfr_header(input$data_item) 
    bfr_change <- paste("Percentage change in", bfr) 
    bfr_share <- paste("Share of", bfr) 
    
    
    # Calculate dynamic breaks 
    bfr_perc <- us_counties$bfr_perc
    min_perc <- floor(min(bfr_perc) / 5) * 5
    max_perc <- ceiling(max(bfr_perc) / 5) * 5
    breaks <- seq(min_perc, max_perc, by = 5)
    
    # Create categorical variable
    us_counties$perc_cat <- cut(us_counties$bfr_perc, breaks = breaks, 
                                include.lowest = TRUE, labels = paste0(breaks[-length(breaks)], "-", breaks[-1], "%")) 
    
    
    # Adjust plot size and other aesthetics 
    ggplot() +
      geom_sf(data = us_counties, aes(fill = perc_cat), color = "gray90", size = 0.05) + 
      
      #scale_fill_gradient(low = "white", high = "blue", na.value = "grey50", name = "Percentage of Producers (%)") +
      scale_fill_brewer(palette = "Blues", na.value = "grey50", name = "Percentage of Young Producers") + 
      theme_minimal() +
      
      labs(title = ifelse(input$year == "% Change", bfr_change, bfr_share)) + 
      
      #labs(title = ifelse(input$year == "% Change", "Percentage Change of Producers", 
      #paste("Percentage of", gsub("PRODUCERS, ", "", gsub(" - NUMBER OF PRODUCERS", "", input$data_item))))) +
      geom_sf_text(data = us_counties, aes(label = STUSPS), size = 3) +
      coord_sf(crs = "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96") +
      theme(
        axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank()
      ) +
      theme(legend.position = "bottom") +
      #guides(fill = guide_colorbar(barwidth = 20, barheight = 1))}, width = 800, height = 600)  # Adjust width and height as needed 
      guides(fill = guide_legend(title = ifelse(input$year == "% Change", bfr_change, bfr_share), 
                                 title.position = "top", title.hjust = 0.5, nrow = 1))}, width = 800, height = 600) 
  
  
  
  output$table <- renderDataTable({
    QS_TOTAL <- data()$QS_TOTAL
    
    map_bfr_header <- function(data_item) {
      if (data_item == "PRODUCERS, YEARS ON ANY OPERATION, LT 11 YEARS - NUMBER OF PRODUCERS") {
        return("Beginning Producers")
      } else if (data_item == "PRODUCERS, FEMALE, DAY TO DAY DECISIONMAKING - NUMBER OF PRODUCERS") {
        return("Female Producers (Day to Day Decisionmaking)")
      } else if (data_item == "PRODUCERS, AGE LT 35 - NUMBER OF PRODUCERS") {
        return("Young Producers")
      } else if (data_item == "PRODUCERS, YEARS ON PRESENT OPERATION, LT 3 YEARS - NUMBER OF PRODUCERS") {
        return("Producers with <3 YoE")
      } 
    } 
    
    bfr <- map_bfr_header(input$data_item)
    
    #item_clean <- gsub("PRODUCERS, ", "", gsub(" - NUMBER OF PRODUCERS", "", input$data_item)) 
    #item_clean <- gsub(", YEARS ON ANY OPERATION", "", gsub(" - NUMBER OF PRODUCERS", "", input$data_item)) 
    bfr_2022_header <- paste(bfr, "2022") 
    bfr_2017_header <- paste(bfr, "2017") 
    bfr_2022_total <- paste("Total Producers 2022") 
    bfr_2022 <- paste("Total", bfr, "2022") 
    
    # Define custom headers 
    
    headers <- c("State Name", bfr_2022_header, bfr_2017_header, "% Change") 
    
    # Select columns based on the condition
    if (input$year == "% Change") {
      datatable(QS_TOTAL %>% select(state_name, bfr_2022, bfr_2017, bfr_perc), 
                options = list(pageLength = 50, autoWidth = TRUE, dom = 't'), 
                rownames = FALSE, colnames = headers) %>%
        formatRound(columns = c('bfr_2022', 'bfr_2017', 'bfr_perc'), digits = 2) 
    } else { 
      
      # Define another set of custom headers for the else condition
      headers <- c("State Name", bfr_2022_total, bfr_2022, "% Share") 
      
      datatable(QS_TOTAL %>% select(state_name, total, bfr, bfr_perc), 
                options = list(pageLength = 50, autoWidth = TRUE, dom = 't'), 
                rownames = FALSE, colnames = headers) %>%
        formatRound(columns = c('total', 'bfr', 'bfr_perc'), digits = 2) 
    }
  }) 
  
  output$bar_chart <- renderPlot({
    QS_TOTAL <- data()$QS_TOTAL 
    
    
    map_bfr_header <- function(data_item) {
      if (data_item == "PRODUCERS, YEARS ON ANY OPERATION, LT 11 YEARS - NUMBER OF PRODUCERS") {
        return("Beginning Producers")
      } else if (data_item == "PRODUCERS, FEMALE, DAY TO DAY DECISIONMAKING - NUMBER OF PRODUCERS") {
        return("Female Producers (Day to Day Decisionmaking)")
      } else if (data_item == "PRODUCERS, AGE LT 35 - NUMBER OF PRODUCERS") {
        return("Young Producers")
      } else if (data_item == "PRODUCERS, YEARS ON PRESENT OPERATION, LT 3 YEARS - NUMBER OF PRODUCERS") {
        return("Producers with <3 YoE")
      } 
    } 
    
    bfr <- map_bfr_header(input$data_item) 
    bfr_change <- paste("Percentage change in", bfr) 
    bfr_share <- paste("Share of", bfr) 
    
    
    specific_states <- c("ALABAMA", "ARKANSAS", "FLORIDA", "GEORGIA", "KENTUCKY", "LOUISIANA", 
                         "MISSISSIPPI", "NORTH CAROLINA", "SOUTH CAROLINA", "TENNESSEE", 
                         "VIRGINIA", "WEST VIRGINIA") 
    
    QS_TOTAL <- QS_TOTAL %>%
      mutate(Category = case_when(
        state_name %in% specific_states ~ "Southeastern states",
        TRUE ~ "Other states"
      ))
    
    mean_specific_states <- mean(QS_TOTAL$QS_TOTAL[QS_TOTAL$state_name %in% specific_states,]$bfr_perc, na.rm = TRUE)
    mean_not_listed_states <- mean(QS_TOTAL$QS_TOTAL[!QS_TOTAL$state_name %in% specific_states,]$bfr_perc, na.rm = TRUE) 
    #mean_all_states <- mean(QS_TOTAL$bfr_perc, na.rm=TRUE) 
    mean_all_states <- sum(QS_TOTAL$bfr)/sum(QS_TOTAL$total)*100 
    
    ggplot(QS_TOTAL, aes(x = reorder(state_name, -bfr_perc), y = bfr_perc, fill = Category)) +
      geom_bar(stat = "identity") +
      theme_minimal() + 
      
      labs(title = ifelse(input$year == "% Change", bfr_change, bfr_share), x = "State", y = "Percentage") + 
      
      #labs(title = ifelse(input$year == "% Change", "Percentage Change of Producers by State", 
      #paste("Percentage of", gsub("PRODUCERS, ", "", gsub(" - NUMBER OF PRODUCERS", "", input$data_item)), "by State")), x = "State", y = "Percentage") + 
      
      scale_fill_manual(values = c("Southeastern states" = "red", "Other states" = "gray")) +
      theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
      geom_hline(yintercept = mean_all_states, color = "black", linetype = "dashed", size = 1) + 
      annotate("text", x = "ALASKA", y = mean_all_states, label = "US average", hjust = -0.1, vjust = 1.5, color = "black", size=5) +
      geom_hline(yintercept = mean_not_listed_states, color = "blue", linetype = "dashed", size = 1) +
      annotate("text", x = "ALASKA", y = mean_not_listed_states, label = "Other states mean", hjust = -0.1, vjust = 0.5, color = "blue")
  }) 
  
  output$download_current <- downloadHandler(
    filename = function() {
      paste(input$view_type, Sys.Date(), if (input$view_type == "table") ".csv" else ".png", sep = "")
    },
    content = function(file) {
      if (input$view_type == "table") {
        QS_TOTAL <- data()$QS_TOTAL
        write.csv(QS_TOTAL, file, row.names = FALSE)
      } else if (input$view_type == "map" || input$view_type == "bar_chart") {
        ggsave(file, plot = last_plot(), device = "png", width = 10, height = 8)
      }
    }
  )
  
} 

# Run the application 
shinyApp(ui = ui, server = server) 
